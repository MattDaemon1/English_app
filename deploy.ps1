# Script de d√©ploiement Heroku pour Windows
Write-Host "üöÄ D√©ploiement EnglishMaster sur Heroku" -ForegroundColor Green

# V√©rifier si Heroku CLI est install√©
try {
    heroku --version | Out-Null
    Write-Host "‚úÖ Heroku CLI d√©tect√©" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Heroku CLI n'est pas install√©. Installez-le depuis https://devcenter.heroku.com/articles/heroku-cli" -ForegroundColor Red
    exit 1
}

# V√©rifier si on est connect√© √† Heroku
try {
    heroku auth:whoami | Out-Null
    Write-Host "‚úÖ Connect√© √† Heroku" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Non connect√© √† Heroku. Ex√©cutez 'heroku login' d'abord" -ForegroundColor Red
    exit 1
}

# Cr√©er l'application Heroku (si elle n'existe pas)
Write-Host "üì± Cr√©ation de l'application Heroku..." -ForegroundColor Yellow
try {
    heroku create englishmaster-app --region eu
}
catch {
    Write-Host "Application existe d√©j√†" -ForegroundColor Yellow
}

# Configurer les variables d'environnement
Write-Host "‚öôÔ∏è Configuration des variables d'environnement..." -ForegroundColor Yellow
heroku config:set NODE_ENV=production --app englishmaster-app

# Ajouter le remote git si n√©cessaire
$remotes = git remote
if ($remotes -notcontains "heroku") {
    heroku git:remote -a englishmaster-app
}

# D√©ployer
Write-Host "üöÄ D√©ploiement en cours..." -ForegroundColor Yellow
git add .
try {
    git commit -m "Deploy to Heroku"
}
catch {
    Write-Host "Rien √† commiter" -ForegroundColor Yellow
}
git push heroku master

Write-Host "‚úÖ D√©ploiement termin√© !" -ForegroundColor Green
Write-Host "üåê Votre application est disponible sur : https://englishmaster-app.herokuapp.com" -ForegroundColor Cyan

# Ouvrir l'application
heroku open --app englishmaster-app
